name: Publish
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  APP_SERVICE_NAME: "app-${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT }}"
  RESOURCE_GROUP_NAME: "rg-${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT }}-${{ vars.LOCATION }}"
  PACKAGE_PATH: "./publish"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Restore
        run: dotnet restore ./GitHubActionsDemo.sln

      - name: Build
        run: dotnet build ./GitHubActionsDemo.sln --configuration release --no-restore

      - name: Test
        run: dotnet test --no-build -c release --logger trx --results-directory "TestResults" /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov

      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./tests/GitHubActionsDemo.WebApi.Tests/TestResults/coverage.info

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: TestResults
        if: always()

      - name: Publish
        run: dotnet publish ./src/GitHubActionsDemo.WebApi/GitHubActionsDemo.WebApi.csproj -c Release --no-build --output '${{ env.PACKAGE_PATH }}'

      - name: Check for Bicep Changes
        uses: dorny/paths-filter@v2
        id: bicep-changes
        with:
          filters: |
            src:
             - './bicep/**'

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Azure Infrastructure
        id: deploy-azure-infrastructure
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: "${{ env.RESOURCE_GROUP_NAME }}"
          template: ./bicep/deploy.bicep
          parameters: "pApplicationName=${{ vars.APPLICATION_NAME }} pEnv=${{ vars.ENVIRONMENT }}"
          failOnStdErr: false
          scope: "resourcegroup"
        if: ${{ steps.bicep-changes.outputs.src == 'true' }}

      - name: Get App Service Publish Profile
        id: get-publish-profile
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            publishProfile = $(az webapp deployment list-publishing-profiles --name ${{ env.APP_SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ vars.SUBSCRIPTION_NAME }} --xml)

      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          publish-profile: steps.get-publish-profile.outputs.publishProfile
          package: ${{ env.PACKAGE_PATH }}
